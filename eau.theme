<?php

/**
 * @file
 * Eau de Web theme file.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_page_attachments_alter().
 */
function eau_page_attachments_alter(array &$page) {
  include 'theme-settings/style-root.inc';
}

/**
 * Implements hook_preprocess_HOOK() for menu-local-task templates.
 */
function eau_preprocess_menu_local_task(&$variables) {
  if (isset($variables['is_active']) && $variables['is_active'] === TRUE) {
    $variables['link']['#options']['attributes']['class'][] = 'active is-active';
  }
  else {
    $variables['link']['#options']['attributes']['class'][] = 'nav-link';
  }

  if (isset($variables['element']['#level'])) {
    $variables['level'] = $variables['element']['#level'];
  }
}

/**
 * Implements theme_preprocess_status_messages().
 */
function eau_preprocess_status_messages(&$variables) {
  $variables['status_message_type'] = theme_get_setting('sg__status_message_type');
}

/**
 * Implements theme_preprocess_page().
 */
function eau_preprocess_page(&$variables) {
  // General settings
  $variables['global'] = [
    'container' => theme_get_setting('sg__container'),
  ];

  // Navbar settings
  $variables['navbar'] = [
    'position' => theme_get_setting('ns__navbar_position'),
    'expand' => theme_get_setting('ns__navbar_expand'),
    'color' => theme_get_setting('ns__navbar_color'),
    'bg' => theme_get_setting('ns__navbar_bg'),
    'out' => theme_get_setting('ns__navbar_out'),
  ];

  // if ($htype = theme_get_setting('ns__navbar_type')) {
  //   $theme_path = \Drupal::theme()->getActiveTheme()->getPath();
  //   $file_path = $theme_path . '/templates/components/headers/' . $htype . '/header.html.twig';
  //   if (file_exists($file_path)) {
  //     $variables['ns__header_type'] = $file_path;
  //   }
  //   else {
  //     $theme_path = drupal_get_path('theme', 'eau');
  //     $variables['ns__header_type'] = $theme_path . '/templates/components/headers/' . $htype . '/header.html.twig';
  //   }
  // }
}

/**
 * Implements theme_preprocess_block().
 */
function eau_preprocess_block(&$variables) {
  // Navbar settings
  $variables['navbar_align'] = theme_get_setting('ts__navbar_align');
}

/**
 * Implements theme_preprocess_datetime_form().
 */
function eau_preprocess_datetime_form(&$variables) {
  $variables['attributes']['class'][] = 'form-inline';
}

/**
 * Implements hook_form_alter().
 */
function eau_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $inline_form = preg_split('/\r\n|[\r\n]/', theme_get_setting('fs__form_input_group'));

  if (
    in_array($form_id, $inline_form)
  ) {
    $form['#form_inline'] = $form_id;
    _eau_attach_form_id($form, $form_id);
  }
}

/**
 * Attaches form id to all form elements.
 */
function _eau_attach_form_id(&$form, $form_id) {
  foreach (Element::children($form) as $child) {
    if (
      !isset($form[$child]['#form_inline'])
    ) {
      $form[$child]['#form_inline'] = $form_id;
    }
    _eau_attach_form_id($form[$child], $form_id);
  }
}

/**
 * Implements hook_theme_suggestions_alter()
 */
function eau_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if (
    isset($variables['element']['#form_inline'])
  ) {
    $element = $variables['element'];
    $formid = str_replace('-', '_', $element['#form_inline']);
    $suggestions[] = $hook . '__input_group';
    $suggestions[] = $hook . '__input_group__' . $formid;
  }
}
